/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void llow_poly_car_button_click(GButton source, GEvent event) { //_CODE_:llow_poly_car_button:652122:
  selectedCar = low_poly_car;
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:llow_poly_car_button:652122:

public void hatch_button_click(GButton source, GEvent event) { //_CODE_:hatch_button:221766:
  selectedCar = hatch;
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:hatch_button:221766:

public void truck_button_click(GButton source, GEvent event) { //_CODE_:truck_button:875014:
  selectedCar = pickup_truck;
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:truck_button:875014:

public void SUV_button_click(GButton source, GEvent event) { //_CODE_:SUV_button:589195:
  selectedCar = SUV;
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:SUV_button:589195:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:503038:
  blueValue = int(slider3.getValueF() * 255);
  println("Blue Value: " + blueValue);
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider1:503038:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:slider2:856539:
  greenValue = int(slider2.getValueF() * 255);
  println("Green Value: " + greenValue);
  println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider2:856539:

public void slider3_change1(GSlider source, GEvent event) { //_CODE_:slider3:200590:
  redValue = int(slider1.getValueF() * 255);
  println("Red Value: " + redValue);
  println("slider3 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider3:200590:

public void slider2d1_change1(GSlider2D source, GEvent event) { //_CODE_:slider2d1:813612:
  println("slider2d1 - GSlider2D >> GEvent." + event + " @ " + millis());
} //_CODE_:slider2d1:813612:

public void slider4_change1(GSlider source, GEvent event) { //_CODE_:slider4:412975:
  println("slider4 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider4:412975:

public void slider5_change1(GSlider source, GEvent event) { //_CODE_:slider5:707459:
  z = slider5.getValueI();
  println("slider5 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider5:707459:

public void button5_click1(GButton source, GEvent event) { //_CODE_:button5:319142:
  isRunning = !isRunning;
  println("button5 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button5:319142:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  llow_poly_car_button = new GButton(this, 10, 80, 70, 30);
  llow_poly_car_button.setText("Sedan");
  llow_poly_car_button.addEventHandler(this, "llow_poly_car_button_click");
  hatch_button = new GButton(this, 90, 80, 70, 30);
  hatch_button.setText("Hatchback");
  hatch_button.addEventHandler(this, "hatch_button_click");
  truck_button = new GButton(this, 90, 120, 70, 30);
  truck_button.setText("Truck");
  truck_button.addEventHandler(this, "truck_button_click");
  SUV_button = new GButton(this, 10, 120, 70, 30);
  SUV_button.setText("SUV");
  SUV_button.addEventHandler(this, "SUV_button_click");
  slider1 = new GSlider(this, 120, 190, 90, 30, 10.0);
  slider1.setRotation(PI/2, GControlMode.CORNER);
  slider1.setLimits(0.5, 0.0, 1.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  slider2 = new GSlider(this, 80, 190, 90, 30, 10.0);
  slider2.setRotation(PI/2, GControlMode.CORNER);
  slider2.setLimits(0.5, 0.0, 1.0);
  slider2.setNumberFormat(G4P.DECIMAL, 2);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "slider2_change1");
  slider3 = new GSlider(this, 40, 190, 90, 30, 10.0);
  slider3.setRotation(PI/2, GControlMode.CORNER);
  slider3.setLimits(0.5, 0.0, 1.0);
  slider3.setNbrTicks(6);
  slider3.setNumberFormat(G4P.DECIMAL, 2);
  slider3.setOpaque(false);
  slider3.addEventHandler(this, "slider3_change1");
  slider2d1 = new GSlider2D(this, 330, 30, 100, 100);
  slider2d1.setLimitsX(0.5, 0.0, 1.0);
  slider2d1.setLimitsY(0.5, 0.0, 1.0);
  slider2d1.setNumberFormat(G4P.DECIMAL, 2);
  slider2d1.setOpaque(true);
  slider2d1.addEventHandler(this, "slider2d1_change1");
  slider4 = new GSlider(this, 330, 180, 100, 40, 10.0);
  slider4.setLimits(0.5, 0.0, 1.0);
  slider4.setNumberFormat(G4P.DECIMAL, 2);
  slider4.setOpaque(false);
  slider4.addEventHandler(this, "slider4_change1");
  slider5 = new GSlider(this, 330, 140, 100, 40, 10.0);
  slider5.setLimits(5, 0, 10);
  slider5.setNbrTicks(5);
  slider5.setNumberFormat(G4P.INTEGER, 0);
  slider5.setOpaque(false);
  slider5.addEventHandler(this, "slider5_change1");
  button5 = new GButton(this, 346, 225, 67, 24);
  button5.setText("Pause");
  button5.addEventHandler(this, "button5_click1");
}

// Variable declarations 
// autogenerated do not edit
GButton llow_poly_car_button; 
GButton hatch_button; 
GButton truck_button; 
GButton SUV_button; 
GSlider slider1; 
GSlider slider2; 
GSlider slider3; 
GSlider2D slider2d1; 
GSlider slider4; 
GSlider slider5; 
GButton button5; 
